name: Extract and Publish Vaultwarden Binary

on:
  schedule:
    # 使用 cron 表达式设置每天 8:30 运行
    - cron: '30 8 * * *'
  workflow_dispatch: # 允许手动触发工作流

permissions:
  contents: write  # 允许写入仓库内容

jobs:
  extract-and-publish:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码
      - name: Check out the repository
        uses: actions/checkout@v4

      # Step 2: 登录 Docker Hub（可选，视镜像访问权限而定）
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: 拉取 Vaultwarden Docker 镜像
      - name: Pull Vaultwarden Docker image
        run: |
          docker pull docker.io/vaultwarden/server:latest-alpine

      # Step 4: 运行容器并提取二进制文件
      - name: Extract Vaultwarden binary from Docker image
        run: |
          container_id=$(docker create docker.io/vaultwarden/server:latest-alpine)
          docker cp $container_id:/vaultwarden /tmp/vaultwarden
          docker cp $container_id:/web-vault /tmp/web-vault
          docker rm $container_id

      # Step 5: 打包二进制文件
      - name: Package Vaultwarden binary
        run: |
          tar -czvf vaultwarden-binary.tar.gz -C /tmp vaultwarden web-vault

      # Step 5: 生成当前时间作为版本号
      - name: Generate version number based on current date and time
        id: version
        run: |
          VERSION=$(date +'%Y.%m.%d.%H%M')
          echo "VERSION=v$VERSION" >> $GITHUB_ENV

      # Step 6: 创建并发布 GitHub Release 使用 softprops/action-gh-release
      - name: Create GitHub Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          files: vaultwarden-binary.tar.gz  # 上传的文件
          tag_name: ${{ env.VERSION }}  # 使用当前时间作为版本号
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub Token 进行身份验证
